{"ast":null,"code":"var _jsxFileName = \"/Users/dgsw36/Documents/GitHub/hg-uiseonggarlicham/src/pages/MainPage/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './style.css';\n\n// API 키를 자신의 키로 교체하세요.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'AIzaSyDikj4SRFKLKXIpuI6qMRFgyuslFg_yDA0';\n\n// YouTube 채널의 이름을 사용자 이름으로 설정합니다.\nconst USER_NAME = 'uiseongTV';\nconst App = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [channelId, setChannelId] = useState('');\n  useEffect(() => {\n    // 사용자 이름을 채널 ID로 변환하는 함수\n    const fetchChannelId = async () => {\n      try {\n        const response = await axios.get('https://www.googleapis.com/youtube/v3/channels', {\n          params: {\n            key: API_KEY,\n            forUsername: USER_NAME,\n            part: 'id'\n          }\n        });\n        if (response.data.items.length > 0) {\n          setChannelId(response.data.items[0].id); // 채널 ID 설정\n        }\n      } catch (error) {\n        console.error('Error fetching channel ID', error);\n      }\n    };\n    fetchChannelId();\n  }, []);\n  useEffect(() => {\n    if (channelId) {\n      // 채널 ID를 사용하여 Shorts 영상을 가져오는 함수\n      const fetchShortsVideos = async () => {\n        try {\n          const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\n            params: {\n              key: API_KEY,\n              channelId: channelId,\n              part: 'snippet',\n              type: 'video',\n              maxResults: 10,\n              order: 'date'\n              // videoDuration: 'short'  // 이 부분을 일단 생략하여 모든 동영상 가져오기\n            }\n          });\n          setVideos(response.data.items);\n        } catch (error) {\n          console.error('Error fetching YouTube shorts videos', error);\n        }\n      };\n      fetchShortsVideos();\n    }\n  }, [channelId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"YouTube Shorts Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shorts-container\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shorts-video\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"320\",\n          height: \"180\",\n          src: `https://www.youtube.com/embed/${video.id.videoId}`,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, video.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+VqmuWevv6Xy1V0ROXG7uorvig4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","API_KEY","USER_NAME","App","_s","videos","setVideos","channelId","setChannelId","fetchChannelId","response","get","params","key","forUsername","part","data","items","length","id","error","console","fetchShortsVideos","type","maxResults","order","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","video","width","height","src","videoId","frameBorder","allow","allowFullScreen","title","snippet","_c","$RefreshReg$"],"sources":["/Users/dgsw36/Documents/GitHub/hg-uiseonggarlicham/src/pages/MainPage/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './style.css';\n\n// API 키를 자신의 키로 교체하세요.\nconst API_KEY = 'AIzaSyDikj4SRFKLKXIpuI6qMRFgyuslFg_yDA0';\n\n// YouTube 채널의 이름을 사용자 이름으로 설정합니다.\nconst USER_NAME = 'uiseongTV';\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n  const [channelId, setChannelId] = useState('');\n\n  useEffect(() => {\n    // 사용자 이름을 채널 ID로 변환하는 함수\n    const fetchChannelId = async () => {\n      try {\n        const response = await axios.get('https://www.googleapis.com/youtube/v3/channels', {\n          params: {\n            key: API_KEY,\n            forUsername: USER_NAME,\n            part: 'id',\n          },\n        });\n\n        if (response.data.items.length > 0) {\n          setChannelId(response.data.items[0].id); // 채널 ID 설정\n        }\n      } catch (error) {\n        console.error('Error fetching channel ID', error);\n      }\n    };\n\n    fetchChannelId();\n  }, []);\n\n  useEffect(() => {\n    if (channelId) {\n      // 채널 ID를 사용하여 Shorts 영상을 가져오는 함수\n      const fetchShortsVideos = async () => {\n        try {\n          const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\n            params: {\n              key: API_KEY,\n              channelId: channelId,\n              part: 'snippet',\n              type: 'video',\n              maxResults: 10,\n              order: 'date',\n              // videoDuration: 'short'  // 이 부분을 일단 생략하여 모든 동영상 가져오기\n            },\n          });\n\n          setVideos(response.data.items);\n        } catch (error) {\n          console.error('Error fetching YouTube shorts videos', error);\n        }\n      };\n\n      fetchShortsVideos();\n    }\n  }, [channelId]);\n\n  return (\n    <div className=\"App\">\n      <h1>YouTube Shorts Videos</h1>\n      <div className=\"shorts-container\">\n        {videos.map((video) => (\n          <div key={video.id.videoId} className=\"shorts-video\">\n            <iframe\n              width=\"320\"\n              height=\"180\"\n              src={`https://www.youtube.com/embed/${video.id.videoId}`}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n              title={video.snippet.title}\n            ></iframe>\n            <p>{video.snippet.title}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}