{"ast":null,"code":"var _jsxFileName = \"/Users/dgsw36/Documents/GitHub/finder-web/finder/src/components/Login/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport './style.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPswd, setshowPswd] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const gotoSignuppage = () => {\n    navigate(\"/signup\");\n  };\n  const cancelPaste = e => {\n    e.preventDefault();\n  };\n  const handleEmailChange = e => {\n    const regex = /^[A-Za-z0-9@.]*$/;\n    if (regex.test(e.target.value)) {\n      setEmail(e.target.value);\n    }\n  };\n  const handlePasswordChange = e => {\n    const inputValue = e.target.value;\n    const sanitizedValue = inputValue.replace(/[^a-zA-Z0-9!@#$%^&*()_+{}|:\"<>?~`[\\];',./\\\\-]/g, '');\n    setPassword(sanitizedValue);\n  };\n  const changePswd = () => {\n    if (showPswd === true) {\n      setshowPswd(false);\n    } else {\n      setshowPswd(true);\n    }\n  };\n  const login = async () => {\n    setLoading(true);\n    if (email === \"\" || password === \"\") {\n      toast.error(\"이메일 또는 비밀번호가 잘못 되었습니다\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        data\n      } = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, {\n        email,\n        password\n      });\n      localStorage.setItem('accessToken', data.accessToken);\n      localStorage.setItem('refreshToken', data.refreshToken);\n      navigate('/');\n    } catch (e) {\n      if (axios.isAxiosError(e)) {\n        const code = e.response.data.code;\n        toast.error(\"이메일 또는 비밀번호가 잘못 되었습니다\");\n        if (code === 'USER_NOT_FOUND') {\n          toast.error(\"이메일 또는 비밀번호가 잘못 되었습니다\");\n          return;\n        }\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"\\uB85C\\uADF8\\uC778\\uD558\\uACE0 \\uC783\\uC5B4\\uBC84\\uB9B0 \\uBB3C\\uAC74 \\uCC3E\\uAE30!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onPaste: handleEmailChange,\n      onChange: handleEmailChange,\n      value: email,\n      placeholder: \"\\uC774\\uBA54\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"passwordbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPswd ? \"text\" : \"password\",\n        onPaste: cancelPaste,\n        onChange: handlePasswordChange,\n        value: password,\n        maxLength: \"200\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showpassword\",\n        onClick: changePswd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-button\",\n      onClick: login,\n      disabled: loading,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"noaccount\",\n      children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uB2E4\\uBA74? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"signupbutton\",\n        onClick: gotoSignuppage,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      newestOnTop: true,\n      closeOnClick: true,\n      pauseOnFocusLoss: true,\n      pauseOnHover: false,\n      limit: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"hOhqdFiVK+uwr9Gj0p8TR9ARbS0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","showPswd","setshowPswd","loading","setLoading","navigate","gotoSignuppage","cancelPaste","e","preventDefault","handleEmailChange","regex","test","target","value","handlePasswordChange","inputValue","sanitizedValue","replace","changePswd","login","error","data","post","process","env","REACT_APP_API_URL","localStorage","setItem","accessToken","refreshToken","isAxiosError","code","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onPaste","onChange","placeholder","maxLength","onClick","disabled","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnFocusLoss","pauseOnHover","limit","_c","$RefreshReg$"],"sources":["/Users/dgsw36/Documents/GitHub/finder-web/finder/src/components/Login/index.jsx"],"sourcesContent":["import React,{useState} from 'react';\nimport axios from 'axios'\nimport { useNavigate } from \"react-router-dom\";\nimport './style.css';\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [showPswd, setshowPswd] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const navigate = useNavigate();\n\n  const gotoSignuppage = () => {\n    navigate(\"/signup\");\n};\n\n\n  const cancelPaste = (e) => {\n    e.preventDefault();\n  }\n\n  const handleEmailChange = (e) => {\n  const regex = /^[A-Za-z0-9@.]*$/;\n\n  if (regex.test(e.target.value)) {\n    setEmail(e.target.value);\n  }\n  };\n  \n\n  const handlePasswordChange = (e) => {\n    const inputValue = e.target.value;\n    const sanitizedValue = inputValue.replace(/[^a-zA-Z0-9!@#$%^&*()_+{}|:\"<>?~`[\\];',./\\\\-]/g, '');\n    setPassword(sanitizedValue);\n  }\n  const changePswd = () =>{\n    if (showPswd === true){\n      setshowPswd(false)\n    }else{\n      setshowPswd(true)\n    }\n  }\n\n  const login = async () => {\n    setLoading(true)\n    if (email === \"\" || password ===\"\"){\n      toast.error(\"이메일 또는 비밀번호가 잘못 되었습니다\")\n      setLoading(false)\n      return\n    }\n    try {\n      const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, {\n        email,\n        password\n      })\n\n      localStorage.setItem('accessToken', data.accessToken)\n      localStorage.setItem('refreshToken', data.refreshToken)\n\n      navigate('/')\n    } catch (e) {\n      if (axios.isAxiosError(e)) {\n        const code = e.response.data.code\n        toast.error(\"이메일 또는 비밀번호가 잘못 되었습니다\")\n        if (code === 'USER_NOT_FOUND') {\n          toast.error(\"이메일 또는 비밀번호가 잘못 되었습니다\")\n\n          return\n        }\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n  \n\n  return (\n    <div className=\"login-container\">\n      <h1>로그인</h1>\n      <p className='title'>로그인하고 잃어버린 물건 찾기!</p>\n      <input\n    type=\"text\"\n    onPaste={handleEmailChange}\n    onChange={handleEmailChange}\n    value={email}\n    placeholder=\"이메일\"\n  />\n      <div className=\"passwordbox\">\n        <input type={showPswd ? \"text\" : \"password\"} onPaste={cancelPaste} onChange={handlePasswordChange} value={password} maxLength=\"200\" placeholder=\"비밀번호\" />\n        <div className=\"showpassword\"  onClick={changePswd}></div>\n      </div>\n      <button className=\"login-button\" onClick={login} disabled={loading}>로그인</button>\n      <p className='noaccount'>계정이 없다면? <span className='signupbutton' onClick={gotoSignuppage}>회원가입하기</span></p>\n      <ToastContainer\n        position='top-right'\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={true}\n        closeOnClick\n        pauseOnFocusLoss\n        pauseOnHover={false}\n        limit={5}\n       />\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AACpB,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,cAAc,GAAGA,CAAA,KAAM;IAC3BD,QAAQ,CAAC,SAAS,CAAC;EACvB,CAAC;EAGC,MAAME,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,iBAAiB,GAAIF,CAAC,IAAK;IACjC,MAAMG,KAAK,GAAG,kBAAkB;IAEhC,IAAIA,KAAK,CAACC,IAAI,CAACJ,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,EAAE;MAC9BhB,QAAQ,CAACU,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;IAC1B;EACA,CAAC;EAGD,MAAMC,oBAAoB,GAAIP,CAAC,IAAK;IAClC,MAAMQ,UAAU,GAAGR,CAAC,CAACK,MAAM,CAACC,KAAK;IACjC,MAAMG,cAAc,GAAGD,UAAU,CAACE,OAAO,CAAC,gDAAgD,EAAE,EAAE,CAAC;IAC/FlB,WAAW,CAACiB,cAAc,CAAC;EAC7B,CAAC;EACD,MAAME,UAAU,GAAGA,CAAA,KAAK;IACtB,IAAIlB,QAAQ,KAAK,IAAI,EAAC;MACpBC,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,MAAI;MACHA,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAMkB,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxBhB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIP,KAAK,KAAK,EAAE,IAAIE,QAAQ,KAAI,EAAE,EAAC;MACjCP,KAAK,CAAC6B,KAAK,CAAC,uBAAuB,CAAC;MACpCjB,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IACA,IAAI;MACF,MAAM;QAAEkB;MAAK,CAAC,GAAG,MAAMjC,KAAK,CAACkC,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,aAAa,EAAE;QAC/E7B,KAAK;QACLE;MACF,CAAC,CAAC;MAEF4B,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEN,IAAI,CAACO,WAAW,CAAC;MACrDF,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEN,IAAI,CAACQ,YAAY,CAAC;MAEvDzB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOG,CAAC,EAAE;MACV,IAAInB,KAAK,CAAC0C,YAAY,CAACvB,CAAC,CAAC,EAAE;QACzB,MAAMwB,IAAI,GAAGxB,CAAC,CAACyB,QAAQ,CAACX,IAAI,CAACU,IAAI;QACjCxC,KAAK,CAAC6B,KAAK,CAAC,uBAAuB,CAAC;QACpC,IAAIW,IAAI,KAAK,gBAAgB,EAAE;UAC7BxC,KAAK,CAAC6B,KAAK,CAAC,uBAAuB,CAAC;UAEpC;QACF;MACF;IACF,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAGD,oBACEV,OAAA;IAAKwC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BzC,OAAA;MAAAyC,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZ7C,OAAA;MAAGwC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1C7C,OAAA;MACF8C,IAAI,EAAC,MAAM;MACXC,OAAO,EAAE/B,iBAAkB;MAC3BgC,QAAQ,EAAEhC,iBAAkB;MAC5BI,KAAK,EAAEjB,KAAM;MACb8C,WAAW,EAAC;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACE7C,OAAA;MAAKwC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BzC,OAAA;QAAO8C,IAAI,EAAEvC,QAAQ,GAAG,MAAM,GAAG,UAAW;QAACwC,OAAO,EAAElC,WAAY;QAACmC,QAAQ,EAAE3B,oBAAqB;QAACD,KAAK,EAAEf,QAAS;QAAC6C,SAAS,EAAC,KAAK;QAACD,WAAW,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzJ7C,OAAA;QAAKwC,SAAS,EAAC,cAAc;QAAEW,OAAO,EAAE1B;MAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACN7C,OAAA;MAAQwC,SAAS,EAAC,cAAc;MAACW,OAAO,EAAEzB,KAAM;MAAC0B,QAAQ,EAAE3C,OAAQ;MAAAgC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChF7C,OAAA;MAAGwC,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,yCAAS,eAAAzC,OAAA;QAAMwC,SAAS,EAAC,cAAc;QAACW,OAAO,EAAEvC,cAAe;QAAA6B,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3G7C,OAAA,CAACH,cAAc;MACbwD,QAAQ,EAAC,WAAW;MACpBC,SAAS,EAAE,IAAK;MAChBC,eAAe,EAAE,KAAM;MACvBC,WAAW,EAAE,IAAK;MAClBC,YAAY;MACZC,gBAAgB;MAChBC,YAAY,EAAE,KAAM;MACpBC,KAAK,EAAE;IAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAAA3C,EAAA,CApGKD,KAAK;EAAA,QAKQL,WAAW;AAAA;AAAAiE,EAAA,GALxB5D,KAAK;AAsGX,eAAeA,KAAK;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}